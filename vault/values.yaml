global:
  enabled: true
  # TLS for end-to-end encrypted transport
  tlsDisable: true
injector:
  enabled: false
server:
  enabled: true
  image:
    repository: "hashicorp/vault"
    # Override the default Image Pull Policy
    pullPolicy: IfNotPresent
  ingress:
    enabled: false
  authDelegator:
    enabled: true
  service:
    enabled: true
  dataStorage:
    enabled: true
    size: 10Gi
    mountPath: "/vault/data"
    storageClass: local-path
    accessMode: ReadWriteOnce
  ha:
    enabled: true
    replicas: 3
    # Enables Vault's integrated Raft storage.  Unlike the typical HA modes where
    # Vault's persistence is external (such as Consul), enabling Raft mode will create
    # persistent volumes for Vault to store data according to the configuration under server.dataStorage.
    # The Vault cluster will coordinate leader elections and failovers internally.
    raft:

      # Enables Raft integrated storage
      enabled: true
      # Set the Node Raft ID to the name of the pod
      setNodeId: false

      # Note: Configuration files are stored in ConfigMaps so sensitive data
      # such as passwords should be either mounted through extraSecretEnvironmentVars
      # or through a Kube secret.  For more information see:
      # https://www.vaultproject.io/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations
      config: |
        ui = true
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          # Enable unauthenticated metrics access (necessary for Prometheus Operator)
          #telemetry {
          #  unauthenticated_metrics_access = "true"
          #}
        }
        storage "raft" {
          path = "/vault/data"
        }
        service_registration "kubernetes" {}
# Vault UI
ui:
  enabled: true
  publishNotReadyAddresses: true
  activeVaultPodOnly: true
  serviceType: "ClusterIP"
  externalPort: 8200
  targetPort: 8200
